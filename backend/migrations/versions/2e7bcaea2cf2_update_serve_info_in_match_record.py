"""update serve info in match record

Revision ID: 2e7bcaea2cf2
Revises: 113e5c05f5ca
Create Date: 2025-06-20 08:45:20.725380

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "2e7bcaea2cf2"
down_revision = "113e5c05f5ca"
branch_labels = None
depends_on = None


def upgrade():
    # 先創建枚舉類型（如果不存在）
    serve_start_enum = postgresql.ENUM(
        "side_a", "side_b", name="serve_start_enum_match_records"
    )
    serve_start_enum.create(op.get_bind(), checkfirst=True)

    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("match_records", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "first_serve_side",
                serve_start_enum,
                nullable=True,
                comment="第一局發球方 (A方/B方)",
            )
        )

    with op.batch_alter_table("members", schema=None) as batch_op:
        batch_op.alter_column(
            "student_id",
            existing_type=sa.VARCHAR(length=20),
            comment="學號（僅正式會員）",
            existing_comment="學號",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "gender",
            existing_type=postgresql.ENUM("male", "female", name="gender_enum_members"),
            comment="性別（male/female）",
            existing_comment="性別",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "blood_type",
            existing_type=postgresql.ENUM(
                "A", "B", "AB", "O", "unknown", name="blood_type_enum_members"
            ),
            comment="血型（A/B/AB/O/unknown）",
            existing_comment="血型",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "position",
            existing_type=postgresql.ENUM(
                "front", "back", "versatile", name="player_position_enum_members"
            ),
            comment="擅長位置（front/back/versatile）",
            existing_comment="擅長位置",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "guest_role",
            existing_type=postgresql.ENUM(
                "teammate", "opponent", "substitute", "neutral", name="guest_role_enum"
            ),
            comment="訪客身份類型",
            existing_comment="訪客在比賽中的身份類型",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "guest_notes",
            existing_type=sa.TEXT(),
            comment="訪客備註",
            existing_comment="訪客備註（如：來自哪個學校、特殊說明等）",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "last_used_at",
            existing_type=postgresql.TIMESTAMP(),
            comment="最後使用時間（訪客專用）",
            existing_comment="最後使用時間",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "usage_count",
            existing_type=sa.INTEGER(),
            comment="使用次數（訪客專用）",
            existing_comment="使用次數",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "leaved_date",
            existing_type=sa.DATE(),
            comment="離隊日期",
            existing_comment="離隊日期 (若已離隊)",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "mu",
            existing_type=sa.DOUBLE_PRECISION(precision=53),
            comment="TrueSkill μ 值",
            existing_comment="TrueSkill μ (平均實力)",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "sigma",
            existing_type=sa.DOUBLE_PRECISION(precision=53),
            comment="TrueSkill σ 值",
            existing_comment="TrueSkill σ (實力不確定性)",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "notes",
            existing_type=sa.TEXT(),
            comment="隊員備註",
            existing_comment="關於此隊員的備註",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "user_id",
            existing_type=sa.INTEGER(),
            comment="對應的使用者帳號ID",
            existing_comment="對應的使用者帳號ID（訪客為空）",
            existing_nullable=True,
        )

        # 刪除索引（如果存在的話）
        try:
            batch_op.drop_index("ix_members_creator_guest")
        except Exception:
            pass
        try:
            batch_op.drop_index("ix_members_guest_identifier")
        except Exception:
            pass
        try:
            batch_op.drop_index("ix_members_guest_phone")
        except Exception:
            pass
        try:
            batch_op.drop_index("ix_members_guest_role")
        except Exception:
            pass

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("members", schema=None) as batch_op:
        # 重新創建索引
        try:
            batch_op.create_index("ix_members_guest_role", ["guest_role"], unique=False)
            batch_op.create_index(
                "ix_members_guest_phone", ["guest_phone"], unique=False
            )
            batch_op.create_index(
                "ix_members_guest_identifier", ["guest_identifier"], unique=True
            )
            batch_op.create_index(
                "ix_members_creator_guest",
                ["created_by_user_id", "is_guest"],
                unique=False,
            )
        except Exception:
            pass

        # 還原欄位註釋
        batch_op.alter_column(
            "user_id",
            existing_type=sa.INTEGER(),
            comment="對應的使用者帳號ID（訪客為空）",
            existing_comment="對應的使用者帳號ID",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "notes",
            existing_type=sa.TEXT(),
            comment="關於此隊員的備註",
            existing_comment="隊員備註",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "sigma",
            existing_type=sa.DOUBLE_PRECISION(precision=53),
            comment="TrueSkill σ (實力不確定性)",
            existing_comment="TrueSkill σ 值",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "mu",
            existing_type=sa.DOUBLE_PRECISION(precision=53),
            comment="TrueSkill μ (平均實力)",
            existing_comment="TrueSkill μ 值",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "leaved_date",
            existing_type=sa.DATE(),
            comment="離隊日期 (若已離隊)",
            existing_comment="離隊日期",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "usage_count",
            existing_type=sa.INTEGER(),
            comment="使用次數",
            existing_comment="使用次數（訪客專用）",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "last_used_at",
            existing_type=postgresql.TIMESTAMP(),
            comment="最後使用時間",
            existing_comment="最後使用時間（訪客專用）",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "guest_notes",
            existing_type=sa.TEXT(),
            comment="訪客備註（如：來自哪個學校、特殊說明等）",
            existing_comment="訪客備註",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "guest_role",
            existing_type=postgresql.ENUM(
                "teammate", "opponent", "substitute", "neutral", name="guest_role_enum"
            ),
            comment="訪客在比賽中的身份類型",
            existing_comment="訪客身份類型",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "position",
            existing_type=postgresql.ENUM(
                "front", "back", "versatile", name="player_position_enum_members"
            ),
            comment="擅長位置",
            existing_comment="擅長位置（front/back/versatile）",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "blood_type",
            existing_type=postgresql.ENUM(
                "A", "B", "AB", "O", "unknown", name="blood_type_enum_members"
            ),
            comment="血型",
            existing_comment="血型（A/B/AB/O/unknown）",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "gender",
            existing_type=postgresql.ENUM("male", "female", name="gender_enum_members"),
            comment="性別",
            existing_comment="性別（male/female）",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "student_id",
            existing_type=sa.VARCHAR(length=20),
            comment="學號",
            existing_comment="學號（僅正式會員）",
            existing_nullable=True,
        )

    with op.batch_alter_table("match_records", schema=None) as batch_op:
        batch_op.drop_column("first_serve_side")

    # 刪除枚舉類型
    serve_start_enum = postgresql.ENUM(name="serve_start_enum_match_records")
    serve_start_enum.drop(op.get_bind(), checkfirst=True)

    # ### end Alembic commands ###
